version: '3.8'

services:
  #############################
  # Servicio de Base de Datos #
  #############################
  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: runner_cibertec_db
    ports:
      - "3307:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      - .\docker\mysql\init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - dawii-net
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot"]
      interval: 15s
      timeout: 10s
      retries: 10
      start_period: 150s

  ######################
  # Servicios de Colas #
  ######################
  rabbit:
    image: rabbitmq:4-management
    container_name: rabbit
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 15s
      retries: 10
      start_period: 100s
    networks:
      - dawii-net

  #################################
  # Servicio Consumidores de Cola #
  #################################
  email-service:
    build:
      context: ./email-service
    container_name: email-service
    ports:
      - "8084:8081"
    depends_on:
      rabbit:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      config-server:
        condition: service_healthy
    networks:
      - dawii-net

  ######################
  # Servicios de Cloud #
  ######################
  config-server:
    build:
      context: ./config-server
    container_name: config-server
    ports:
      - "8888:8888"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - dawii-net

  eureka-server:
    build:
      context: ./eureka-server
    container_name: eureka-server
    ports:
      - "8761:8761"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 25s
    networks:
      - dawii-net

  api-gateway:
    build:
      context: ./api-gateway
    container_name: api-gateway
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      eureka-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 25s
    networks:
      - dawii-net

  ##################
  # Microservicios #
  ##################
  user-app:
    build:
      context: .
      dockerfile: user-app/Dockerfile
    container_name: user-app
    restart: on-failure
    depends_on:
      config-server:
        condition: service_healthy
      api-gateway:
        condition: service_healthy
      mysql:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - dawii-net

  ubicacion-service:
    build:
      context: .
      dockerfile: ubicacion-service/Dockerfile
    container_name: ubicacion-service
    restart: on-failure
    depends_on:
      config-server:
        condition: service_healthy
      api-gateway:
        condition: service_healthy
      mysql:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - dawii-net

  order-app:
    build:
      context: .
      dockerfile: order-app/Dockerfile
    container_name: order-app
    restart: on-failure
    depends_on:
      config-server:
        condition: service_healthy
      api-gateway:
        condition: service_healthy
      mysql:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - dawii-net

  product-app:
    build:
      context: .
      dockerfile: product-app/Dockerfile
    container_name: product-app
    restart: on-failure
    depends_on:
      config-server:
        condition: service_healthy
      api-gateway:
        condition: service_healthy
      mysql:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - dawii-net

  store-app:
    build:
      context: .
      dockerfile: store-app/Dockerfile
    container_name: store-app
    restart: on-failure
    depends_on:
      config-server:
        condition: service_healthy
      api-gateway:
        condition: service_healthy
      mysql:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - dawii-net

  oauth-server:
    build:
      context: .
      dockerfile: oauth-server/Dockerfile
    container_name: oauth-server
    ports:
      - "9000:9000"
    restart: on-failure
    depends_on:
      mysql:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      config-server:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - dawii-net

volumes:
  mysql-data:
    driver: local

networks:
  dawii-net:
    driver: bridge
